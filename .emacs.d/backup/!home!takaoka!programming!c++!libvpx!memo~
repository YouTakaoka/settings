cv::Mat Yv12ToRgb( uchar *pBuffer,long bufferSize, int width,int height )
{
    cv::Mat result(height,width,CV_8UC3);
    uchar y,cb,cr;

    long ySize=width*height;
    long uSize;
    uSize=ySize>>2;

    assert(bufferSize==ySize+uSize*2);

    uchar *output=result.data;
    uchar *pY=pBuffer;
    uchar *pU=pY+ySize;
    uchar *pV=pU+uSize;

    uchar r,g,b;
    for (int i=0;i<uSize;++i)
    {
        for(int j=0;j<4;++j)
        {
            y=pY[i*4+j];
            cb=ucharpU[i];
            cr=ucharpV[i];

                //ITU-R standard
            b=saturate_cast<uchar>(y+1.772*(cb-128));
            g=saturate_cast<uchar>(y-0.344*(cb-128)-0.714*(cr-128));
            r=saturate_cast<uchar>(y+1.402*(cr-128));

            *output++=b;
            *output++=g;
            *output++=r;
        }
    }
    return result;
}

